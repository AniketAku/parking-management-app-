[tool:pytest]
# Pytest configuration for UI testing

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    accessibility: marks tests as accessibility tests
    performance: marks tests as performance tests
    visual: marks tests as visual regression tests
    unit: marks tests as unit tests
    e2e: marks tests as end-to-end tests

# Test output
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src/desktop/ui
    --cov-report=html:reports/coverage
    --cov-report=xml:reports/coverage.xml
    --cov-report=term-missing
    --cov-fail-under=85
    --cov-branch
    --html=reports/pytest_report.html
    --self-contained-html
    --junit-xml=reports/junit.xml

# Coverage configuration
[coverage:run]
source = src/desktop/ui
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = reports/coverage

# Timeout settings
timeout = 300
timeout_method = thread

# Test discovery patterns
norecursedirs = .git .tox venv env build dist *.egg

# Minimum Python version
minversion = 3.9

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning
    ignore:.*Use of \.\. or absolute path:pytest.PytestCollectionWarning